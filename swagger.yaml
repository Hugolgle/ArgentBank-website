swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error







  /transactions:
    get:
      summary: Récupérer toutes les transactions du mois en cours groupées par compte
      description: ''
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: token
      responses:
        200:
          description: Succès
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                    transactions:
                      type: array
          examples:
            application/json:
              accounts:
                - accountId: "000"
                  transactions:
                    - id: "1"
                      amount: 5.00
                      description: "Boulangerie"
                      category: "Alimentation"
                      date: "2024-03-14"
                - accountId: "111"
                  transactions:
                    - id: "2"
                      amount: 10.0
                      description: "Cinema"
                      category: "Loisirs"
                      date: "2024-03-14"

  /transactions/{transactionId}:
    get:
      summary: Récupérer les informations d'une transaction
      description: ''
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: L'ID de la transaction
      responses:
        200:
          description: Succès
          examples:
            application/json:
              id: "1"
              amount: 5.00
              description: "Boulangerie"
              date: "2024-03-14"
              accountId: "000"
              category: "Alimentation"
              note: ''
        404:
          description: Transaction non trouvée
    put:
      summary: Modifier la note ou catégorie d'une transaction
      description: Permet à l'utilisateur de modifier la note ou la catégorie d'une transaction existante.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: L'ID de la transaction à mettre à jour
        - name: updateInfo
          in: body
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: La nouvelle catégorie
              note:
                type: string
                description: La nouvelle note
      responses:
        200:
          description: Succès
          schema:
            $ref: '#/definitions/Transaction'
          examples:
            application/json:
              id: "1"
              mount: 5.00
              description: "Boulangerie"
              date: "2024-03-14"
              accountId: "000"
              category: "Alimentation"
              note: "note modifié"
        404:
          description: Transaction non trouvée

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
